@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Color="Color.Secondary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton aria-label="Toggle light/dark theme" 
            Icon=@(_isDarkMode ? @Icons.Material.Outlined.LightMode : @Icons.Material.Outlined.DarkMode) Color="MudBlazor.Color.Inherit" 
            OnClick="DarkMode" />
        <MudIconButton aria-label="Tea" Icon="@Icons.Material.Outlined.Coffee" Color="MudBlazor.Color.Inherit" OnClick="MakeTea"/>

    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1" Variant="@DrawerVariant.Mini">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6" Style=@(!_drawerOpen ? "visibility: hidden" : "")><b>Our</b>Home</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


@*1a1a27ff black *@ 
@*92929fff grey*@


@code {
    bool _drawerOpen = true;
    private MudTheme _theme = new();
    private bool _isDarkMode = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void DarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }

    void MakeTea()
    {

    }
}