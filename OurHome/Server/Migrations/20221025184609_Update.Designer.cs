// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OurHome.Server;

#nullable disable

namespace OurHome.Server.Migrations
{
    [DbContext(typeof(OurHomeDbContext))]
    [Migration("20221025184609_Update")]
    partial class Update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OurHome.Server.Models.Bills", b =>
                {
                    b.Property<int>("BillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillID"), 1L, 1);

                    b.Property<string>("Bill")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.HasKey("BillID");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("OurHome.Server.Models.BillsDueDate", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"), 1L, 1);

                    b.Property<DateTime>("BillDueDate")
                        .HasColumnType("date");

                    b.HasKey("PersonID");

                    b.ToTable("BillsDueDate");
                });

            modelBuilder.Entity("OurHome.Server.Models.PastBills", b =>
                {
                    b.Property<int>("PastBillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PastBillID"), 1L, 1);

                    b.Property<DateTime>("BillMonth")
                        .HasColumnType("date");

                    b.Property<decimal>("Bins")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Electric")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Internet")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Oil")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PastBillID");

                    b.ToTable("PastBills");
                });

            modelBuilder.Entity("OurHome.Server.Models.PayedBills", b =>
                {
                    b.Property<int>("PayedBillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayedBillID"), 1L, 1);

                    b.Property<string>("Bill")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("PayedBillID");

                    b.HasIndex("PersonID");

                    b.ToTable("PayedBills");
                });

            modelBuilder.Entity("OurHome.Server.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"), 1L, 1);

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("OurHome.Server.Models.PersonsBills", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"), 1L, 1);

                    b.Property<decimal>("Bins")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Electricity")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Internet")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Milk")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Oil")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PersonID");

                    b.ToTable("PersonsBills");
                });

            modelBuilder.Entity("OurHome.Server.Models.PayedBills", b =>
                {
                    b.HasOne("OurHome.Server.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
